
def platforms = rootProject.enabled_platforms.split(',')

def filter_platforms = platforms.stream().filter {platform ->
    (!rootProject.using_neo && platform != "neoforge") ||
    (rootProject.using_neo && platform != "forge")
}.collect()

architectury {
    common filter_platforms
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // This is just so that we have the cloth config classes available in common.
    // You will still need to get the right cloth config version for each platform.
    modCompileOnlyApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_version}")
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xplugin:Manifold']
}